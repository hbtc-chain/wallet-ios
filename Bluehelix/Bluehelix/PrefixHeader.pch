//
//  PrefixHeader.pch
//  Bhex
//
//  Created by BHEX on 2018/6/10.
//  Copyright © 2018年 BHEX. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.



#ifdef __OBJC__
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import "MBProgressHUD+JDragon.h"
#import <MJExtension/MJExtension.h>
#import "MJRefresh.h"
#import <Masonry/Masonry.h>
#import "Singleton.h"
#import "XXNavigationController.h"
#import "XXCategory.h"
#import "XXFontHeader.h"
#import "XXColorHeader.h"
#import "LocalizeHelper.h" //国际化
#import "XXKit.h"
#import "BaseViewController.h"
#import "XXUserData.h"
#import "Alert.h"
#import "XXSystem.h"
#import "HttpManager.h"
#import "XXSqliteManager.h"
#import "XXDecimalNumberHelper.h"
#import "XXAccountModel.h"
#import "RatesManager.h"
#import "XXSegmentView.h"
#import "XXFailureView.h"
#import "XXAssetModel.h"
#import "XXEmptyView.h"

static inline BOOL IsEmpty(id thing) {
    return thing == nil || [thing isEqual:[NSNull null]]
    || ([thing respondsToSelector:@selector(length)]
        && [(NSData *)thing length] == 0)
    || ([thing respondsToSelector:@selector(count)]
        && [(NSArray *)thing count] == 0);
}

static inline BOOL IsDict(id dict) {
    return [dict isKindOfClass:[NSDictionary class]];
}

static inline BOOL IsArray(id array) {
    return [array isKindOfClass:[NSArray class]];
}

static inline BOOL IsString(id string) {
    return [string isKindOfClass:[NSString class]];
}

static inline BOOL IsImage(id image) {
    return [image isKindOfClass:[UIImage class]];
}

typedef NS_ENUM(NSUInteger, NetworkMethod) {
    Get = 0,
    Post
};
#endif

//行情
//#define KIndexModel [XXIndexModules sharedXXIndexModules]
#define KDetail [KSymbolDetailData sharedKSymbolDetailData]
#define KDecimal XXDecimalNumberHelper
#define KUser [XXUserData sharedUserData]
#define KSystem [XXSystem sharedXXSystem]
#define KConfigure [XXConfiguration sharedXXConfiguration]
#define App_Delegate (AppDelegate *)[[UIApplication sharedApplication] delegate]
#define BHUserDefaults [NSUserDefaults standardUserDefaults]
#define KDecimal XXDecimalNumberHelper
#define KUserSocket [XXUserSocket sharedXXUserSocket]
#define KTrade [XXTradeData sharedXXTradeData]
#define KMarket [XXMarketData sharedXXMarketData]
#define KQuoteSocket [XXQuoteSocket sharedXXQuoteSocket]


//wallet
#define kNotificationNetCome @"NotificationNetCome"
#define kNotificationAssetRefresh @"AssetRefresh"
#define kApp_Name [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleDisplayName"]

#define kBtnBorderRadius 6
#define kBtnHeight 48
#define kAlertDuration 2
#define kAlertLongDuration 4
//夜间模式 颜色
#define kPrimaryMain kIsNight ? [UIColor colorWithHexString:@"#3375E0"] : [UIColor colorWithHexString:@"#3375E0"]
#define kPrimaryLight kIsNight ? [UIColor colorWithHexString:@"#4299FF"] : [UIColor colorWithHexString:@"#4299FF"]
#define kWhiteColor kIsNight ? [UIColor colorWithHexString:@"#141A27"] : [UIColor colorWithHexString:@"#FFFFFF"]
#define kGray900 kIsNight ? [UIColor colorWithHexString:@"#B0BFDB"] : [UIColor colorWithHexString:@"#0A1825"]
#define kGray800 kIsNight ? [UIColor colorWithHexString:@"#B0BFDB"] : [UIColor colorWithHexString:@"#0E1D2C"]
#define kGray700 kIsNight ? [UIColor colorWithHexString:@"#6E8196"] : [UIColor colorWithHexString:@"#475563"]
#define kGray500 kIsNight ? [UIColor colorWithHexString:@"#6E8196"] : [UIColor colorWithHexString:@"#6E8196"]
#define kGray300 kIsNight ? [UIColor colorWithHexString:@"#6E8196"] : [UIColor colorWithHexString:@"#ACB5C3"]
#define kGray200 kIsNight ? [UIColor colorWithHexString:@"#B0BFDB"] : [UIColor colorWithHexString:@"#B0BFDB"]
#define kGray100 kIsNight ? [UIColor colorWithHexString:@"#202F44"] : [UIColor colorWithHexString:@"#E7ECF4"]
#define kGray50 kIsNight ? [UIColor colorWithHexString:@"#1A2233"] : [UIColor colorWithHexString:@"#F9F9FB"]
#define kPriceFall kIsNight ? [UIColor colorWithHexString:@"#ED3756"] : [UIColor colorWithHexString:@"#ED3756"]
#define kPriceRise kIsNight ? [UIColor colorWithHexString:@"#35E5DB"] : [UIColor colorWithHexString:@"#35E5DB"]
#define kGreen100  kIsNight ? [UIColor colorWithHexString:@"#51D372"] : [UIColor colorWithHexString:@"#51D372"]
#define kRed100 kIsNight ? [UIColor colorWithHexString:@"#F73A46"] : [UIColor colorWithHexString:@"#F73A46"]
#define kOrange100 kIsNight ? [UIColor colorWithHexString:@"#FF922E"] : [UIColor colorWithHexString:@"#FF922E"]
#define kGreen kIsNight ? [UIColor colorWithHexString:@"#269A99"] : [UIColor colorWithHexString:@"#269A99"]
#define kGray kIsNight ? [UIColor colorWithHexString:@"#475563"] : [UIColor colorWithHexString:@"#475563"]
#define kDarkGray kIsNight ? [UIColor colorWithHexString:@"#1A2233"] : [UIColor colorWithHexString:@"#F4F7FF"]
#define kE5EDFE [UIColor colorWithHexString:@"#E5EDFE"]
/**特殊*/
#define kButtonDisableColor kIsNight ? [UIColor colorWithHexString:@"#475563"] : [UIColor colorWithHexString:@"#E7ECF4"]
//dark 也是白色
#define kWhiteNoChange [UIColor colorWithHexString:@"#FFFFFF"]
//
#define kGray900NoChange kIsNight ? [UIColor colorWithHexString:@"#0A1825"] : [UIColor colorWithHexString:@"#0A1825"]
//正常Gray700 DarkModel Gray200
#define kGray700Special kIsNight ? [UIColor colorWithHexString:@"#B0BFDB"] : [UIColor colorWithHexString:@"#475563"]
//底色
#define kBackgroundLeverFirst kIsNight ? [UIColor colorWithHexString:@"#141A27"] : [UIColor colorWithHexString:@"#FFFFFF"]
#define kBackgroundLeverSecond kIsNight ? [UIColor colorWithHexString:@"#1A2233"] : [UIColor colorWithHexString:@"#FFFFFF"]
#define kBackgroundLeverThird kIsNight ? [UIColor colorWithHexString:@"#222D42"] : [UIColor colorWithHexString:@"#FFFFFF"]
#define kBackgroundLeverFouth kIsNight ? [UIColor colorWithHexString:@"#293652"] : [UIColor colorWithHexString:@"#FFFFFF"]

#define kMainLabelColor kIsNight ? [UIColor colorWithHexString:@"#B0BFDB"] : [UIColor colorWithHexString:@"#0A1825"]
#define kSubLabelColor kIsNight ? [UIColor colorWithHexString:@"#6E8196"] : [UIColor colorWithHexString:@"#6E8196"]
#define kSeparateLineColor kIsNight ? [[UIColor colorWithHexString:@"#222D42"] colorWithAlphaComponent:0.5] : [UIColor colorWithHexString:@"#F9F9FB"]
#define kShadowColor kIsNight ? [UIColor colorWithHexString:@"#141414" withAlpha:0.12] : [UIColor colorWithHexString:@"#3375E0" withAlpha:0.12]



// 主颜色【一级主色调】
#define kBlue100   kIsNight ? KRGBA(50,117,224,100) : KRGBA(50,117,224,100)
#define kBlue80   kIsNight ? KRGBA(50,117,224,80) : KRGBA(50,117,224,80)
#define kBlue50   kIsNight ? KRGBA(50,117,224,50) : KRGBA(50,117,224,50)
#define kBlue20   kIsNight ? KRGBA(50,117,224,20) : KRGBA(50,117,224,20)
#define kBlue10   kIsNight ? KRGBA(50,117,224,10) : KRGBA(50,117,224,10)
#define kBlue5   kIsNight ? KRGBA(50,117,224,5) : KRGBA(50,117,224,5)

// 主色调【蓝色】背景下的字体颜色
//#define kMainTextColor [UIColor whiteColor]

// 辅助颜色【二级主色调】
//#define kOrange100   kIsNight ? KRGBA(255,190,0,100) : KRGBA(255,143,0,100)
#define kOrange80   kIsNight ? KRGBA(255,190,0,80) : KRGBA(255,143,0,80)
#define kOrange50   kIsNight ? KRGBA(255,190,0,50) : KRGBA(255,143,0,50)
#define kOrange20   kIsNight ? KRGBA(255,190,0,20) : KRGBA(255,143,0,20)
#define kOrange10   kIsNight ? KRGBA(255,190,0,10) : KRGBA(255,143,0,10)
#define kOrange5   kIsNight ? KRGBA(255,190,0,5) : KRGBA(255,143,0,5)

// 字体颜色
#define kDark100   kIsNight ? KRGBA(207,210,233,100) : KRGBA(34,43,51,100)
#define kDark80   kIsNight ? KRGBA(207,210,233,80) : KRGBA(34,43,51,80)
#define kDark50   kIsNight ? KRGBA(110,134,168,100) : KRGBA(34,43,51,50)
#define kDark20   kIsNight ? KRGBA(207,210,233,20) : KRGBA(34,43,51,20)
#define kDark10   kIsNight ? KRGBA(207,210,233,10) : KRGBA(34,43,51,10)
#define kDark5   kIsNight ? KRGBA(207,210,233,5) : KRGBA(34,43,51,5)

// 背景颜色
#define kWhite100   kIsNight ? KRGBA(19,31,47,100) : KRGBA(255,255,255,100)
#define kWhite80   kIsNight ? KRGBA(19,31,47,80) : KRGBA(255,255,255,80)
#define kWhite50   kIsNight ? KRGBA(19,31,47,50) : KRGBA(255,255,255,50)
#define kWhite20   kIsNight ? KRGBA(19,31,47,20) : KRGBA(255,255,255,20)
#define kWhite10   kIsNight ? KRGBA(19,31,47,10) : KRGBA(255,255,255,10)
#define kWhite5   kIsNight ? KRGBA(19,31,47,5) : KRGBA(255,255,255,5)

// 涨颜色
//#define kGreen100  kIsNight ? KRGBA(1,172,143,100) : KRGBA(1,172,143,100)
#define kGreen80   kIsNight ? KRGBA(1,172,143,80) : KRGBA(1,172,143,80)
#define kGreen50   kIsNight ? KRGBA(1,172,143,50) : KRGBA(1,172,143,50)
#define kGreen20   kIsNight ? KRGBA(1,172,143,20) : KRGBA(1,172,143,20)
#define kGreen10   kIsNight ? KRGBA(1,172,143,10) : KRGBA(1,172,143,10)
#define kGreen5    kIsNight ? KRGBA(1,172,143,5) : KRGBA(1,172,143,5)

// 跌颜色
//#define kRed100   kIsNight ? KRGBA(209,76,99,100) : KRGBA(209,76,99,100)
#define kRed80    kIsNight ? KRGBA(209,76,99,80) : KRGBA(209,76,99,80)
#define kRed50    kIsNight ? KRGBA(209,76,99,50) : KRGBA(209,76,99,50)
#define kRed20    kIsNight ? KRGBA(209,76,99,20) : KRGBA(209,76,99,20)
#define kRed10    kIsNight ? KRGBA(209,76,99,10) : KRGBA(209,76,99,10)
#define kRed5     kIsNight ? KRGBA(209,76,99,5) : KRGBA(209,76,99,5)

#define kBuglyID @"bb0f612e68"

#define kServerUrl @"https://explorer.hbtcchain.io"
#define kWebUrl @"https://dex.hbtcchain.io/"

#define kChainId @"hbtc-testnet" //链名称
#define kCu_number @"0"
#define kMinFee @"0.01"
#define kSliderMinFee @"0.002"
#define kSliderMaxFee @"1"
#define kMainToken @"hbc" //原生主代币
#define kPubKeyType @"tendermint/PubKeySecp256k1" //公钥加密方式
#define kMsgSend @"hbtcchain/transfer/MsgSend" //转账
#define kMsgDelegate @"hbtcchain/MsgDelegate" //委托
#define kMsgUndelegate @"hbtcchain/MsgUndelegate" //取消委托
#define kMsgKeyGen @"hbtcchain/keygen/MsgKeyGen" //生成跨链地址
#define kMsgDeposit @"hbtcchain/transfer/MsgDeposit" //跨链充值
#define kMsgWithdrawal @"hbtcchain/transfer/MsgWithdrawal" //跨链提币
#define kMsgCreateProposal @"hbtcchain/gov/MsgSubmitProposal" //发起提案
#define kMsgPledge @"hbtcchain/gov/MsgDeposit" //质押
#define kMsgVote @"hbtcchain/gov/MsgVote" //投票
#define kMsgWithdrawalDelegationReward @"hbtcchain/MsgWithdrawDelegationReward" //提取收益
#define kMsgNewToken @"hbtcchain/hrc10/MsgNewToken" //发行代币
#define kMsgMappingSwap @"hbtcchain/mapping/MsgMappingSwap" //映射
#define kMsgAddLiquidity @"hbtcchain/openswap/MsgAddLiquidity" //添加流动性
#define kMsgRemoveLiquidity @"hbtcchain/openswap/MsgRemoveLiquidity" //移除流动性
#define kMsgLimitSwap @"hbtcchain/openswap/MsgLimitSwap" //限价单兑换
#define kMsgCancelLimitSwap @"hbtcchain/openswap/MsgCancelLimitSwap" //撤单
#define kMsgSwapExactOut @"hbtcchain/openswap/MsgSwapExactOut" //兑换（输出确定）
#define kMsgSwapExactIn @"hbtcchain/openswap/MsgSwapExactIn" //兑换（输入确定）

#define kShowPassword [XXUserData sharedUserData].showPassword
#define kText [XXUserData sharedUserData].text
#define kHideAssetText @"***"
#define kPrecision 1000000000000000000 //精度是10的18次方
#define kPrecision_U 0.000001 //10的负6次方

#define kPrecisionDecimal [NSDecimalNumber decimalNumberWithString:@"1000000000000000000"]
#define kPrecisionDecimal_U [NSDecimalNumber decimalNumberWithString:@"0.000001"]
#define kPrecisionDecimalPower(power) [[NSDecimalNumber decimalNumberWithString:@"10"] decimalNumberByRaisingToPower:(power)]
#define kAmountShortTrim(amount) [NSString amountShortTrim:(amount)]
#define kAmountLongTrim(amount) [NSString amountLongTrim:(amount)]
#define kAddressReplace(address) [NSString addressReplace:(address)]

#define kScreen_Height [UIScreen mainScreen].bounds.size.height
#define kScreen_Width [UIScreen mainScreen].bounds.size.width
#define kStatusBarHeight [UIApplication sharedApplication].statusBarFrame.size.height
#define kNavNormalHeight (CGRectGetMaxY([UIApplication sharedApplication].statusBarFrame) + 44)
#define kNavHeight (CGRectGetMaxY([UIApplication sharedApplication].statusBarFrame) + 52)
#define kNavBigHeight (CGRectGetMaxY([UIApplication sharedApplication].statusBarFrame) + 132)
#define kNavShadowHeight 12 // 导航栏阴影完全显示出来的滚动高度
#define DepthMapLineWidth 1 // 深度图线条宽度
#define KLine_Height 1 // 分割线的高度
#define KLeftSpace_20 (K375(24))
#define kLeftSpace_70 72

#define KString(str) (str) == nil ? @"" : [NSString stringWithFormat:@"%@",(str)]
#define Kscal(value) ((kScreen_Width/1242)*(value))
#define K375(value) ((kScreen_Width/375)*(value))
#define KSpacing ((kScreen_Width/375)*(15))

/** 是否夜间模式 */
#define kIsNight [XXUserData sharedUserData].isNightType

#define KWindow [UIApplication sharedApplication].keyWindow
#define BH_IS_IPHONE_5 ([UIScreen mainScreen].nativeBounds.size.height == 1136)
#define BH_IS_IPHONE_6 ([UIScreen mainScreen].nativeBounds.size.height == 1334)
#define BH_IS_IPHONE_6P ([UIScreen mainScreen].nativeBounds.size.height == 2208 || [UIScreen mainScreen].nativeBounds.size.height == 1920)
#define BH_IS_IPHONE_X ([UIScreen mainScreen].nativeBounds.size.height == 2436 || [UIScreen mainScreen].nativeBounds.size.height == 1792 || [UIScreen mainScreen].nativeBounds.size.height == 2688)
#define kTabbarHeight (BH_IS_IPHONE_X ? 83 : 59)
#define TradeDepthHeight 64.5 // 交易盘口的高度
#define UILabel_Line_Space [[[LocalizeHelper sharedLocalSystem] getLanguageCode] isEqualToString:@"en"] ? 2.0f : 5.0f
#define UILabel_Text_Space 0.2f

#pragma mark - 数据
#define ISDictionary(object) (object != nil && [object isKindOfClass:[NSDictionary class]])

#if TARGET_IPHONE_SIMULATOR
#define SIMULATOR_TEST
#else
#endif

#ifdef DEBUG
#define NSLog(...) NSLog(__VA_ARGS__)

//#define NSLog(FORMAT, ...) fprintf(stderr, "%s:%zd\t%s\n", [[[NSString stringWithUTF8String: __FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat: FORMAT, ## __VA_ARGS__] UTF8String]);

#else
#define NSLog(...)
#endif

#endif /* PrefixHeader_pch */

#ifndef weakify
#if DEBUG
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#else
#if __has_feature(objc_arc)
#define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
#endif
#endif
#endif

#ifndef strongify
#if DEBUG
#if __has_feature(objc_arc)
#define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
#endif
#else
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
#endif
#endif
#endif
